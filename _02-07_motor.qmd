## Motor {#sec-motor}

{{< include _02-07_motor_text.qmd >}}

```{r}
#| label: setup-motor
#| include: false

# domain
domains <- c("Motor")

# phenotype
pheno <- "motor"
```

```{r}
#| label: export-motor
#| include: false

# Read the CSV file into a data frame
motor <- vroom::vroom("neurocog.csv")

# Filter the data frame based on certain conditions
# Keep only the rows where 'domain' equals 'domains' and 'z_mean_domain' is not NA
motor <- motor |>
  dplyr::filter(domain %in% domains)

# Select specific columns from the data frame
motor <- motor |>
  dplyr::select(
    test,
    test_name,
    scale,
    raw_score,
    score,
    ci_95,
    percentile,
    range,
    domain,
    subdomain,
    narrow,
    pass,
    verbal,
    timed,
    description,
    result,
    z,
    z_mean_domain,
    z_sd_domain,
    z_mean_subdomain,
    z_sd_subdomain,
    z_mean_narrow,
    z_sd_narrow,
    z_mean_pass,
    z_sd_pass,
    z_mean_verbal,
    z_sd_verbal,
    z_mean_timed,
    z_sd_timed
  )

# Write the 'motor' data frame to a CSV file
# The file name is derived from the 'pheno' variable
readr::write_excel_csv(motor, paste0(pheno, ".csv"), na = "", col_names = TRUE, append = FALSE)
```

```{r}
#| label: data-motor
#| include: false

# read and filter data
data <- motor

scales <- c(
  "Dominant Hand Time",
  "Dominant Hand",
  "Dominant vs. Nondominant",
  "Fingertip Tapping Dominant Hand Repetitions",
  "Fingertip Tapping Dominant Hand Sequences",
  "Fingertip Tapping Dominant Hand",
  "Fingertip Tapping Nondominant Hand Repetitions",
  "Fingertip Tapping Nondominant Hand Sequences",
  "Fingertip Tapping Nondominant Hand",
  "Fingertip Tapping Repetitions",
  "Fingertip Tapping Sequences",
  "FT Dominant Hand vs. Nondominant Hand",
  "Imitating Hand Positions",
  "Imitating Hand Positions-Dominant",
  "Imitating Hand Positions-Nondominant",
  "Left-Hand Time",
  "Non-Dominant Hand Time",
  "Nondominant Hand",
  "Nondominant Hand Time",
  "Repetitions vs. Sequences",
  "Right-Hand Time",
  "Visuomotor Precision Errors",
  "Visuomotor Precision Pencil Lifts",
  "Visuomotor Precision Completion Time",
  "Visuomotor Precision",
  "FT Dominant Hand Combined",
  "FT Nondominant Hand Combined"
)

# Filter the data using the filter_data function from the bwu library
# The domain is specified by the 'domains' variable
# The scale is specified by the 'scales' variable
data_motor <- bwu::filter_data(data, domain = domains, scale = scales)
```

```{r}
#| label: text-motor
#| cache: true
#| include: false

# Generate the text for the motor domain
bwu::cat_neuropsych_results(data = data_motor, file = "_02-07_motor_text.qmd")
```

```{r}
#| label: qtbl-motor
#| dev: tikz
#| fig-process: pdf2png
#| include: false

# Set the default engine for tikz to "xetex"
options(tikzDefaultEngine = "xetex")

# table arguments
table_name <- "table_motor"
vertical_padding <- 0
multiline <- TRUE

# footnotes
fn_scaled_score <- gt::md("Scaled score: Mean = 10 [50th‰], SD ± 3 [16th‰, 84th‰]")
fn_t_score <- gt::md("T-score: Mean = 50 [50th‰], SD ± 10 [16th‰, 84th‰]")

# Groupings
grp_motor <- list(
  t_score = c("Grooved Pegboard"),
  scaled_score = c("NEPSY-2")
)

# make `gt` table
bwu::tbl_gt(
  data = data_motor,
  pheno = pheno,
  table_name = table_name,
  fn_t_score = fn_t_score,
  fn_scaled_score = fn_scaled_score,
  grp_t_score = grp_motor[["t_score"]],
  grp_scaled_score = grp_motor[["scaled_score"]],
  dynamic_grp = grp_motor,
  vertical_padding = vertical_padding,
  multiline = multiline
)
```

```{r}
#| label: fig-motor
#| include: false
#| eval: true
#| fig-cap: "Sensorimotor tasks refer to the capacity to control hand movements quickly, smoothly, and with adequate precision, which are required to engage in activities such as writing and drawing."

# dotplot args
colors <- NULL
return_plot <- TRUE
filename <- "fig_motor.svg"

x <- data_motor$z_mean_narrow
y <- data_motor$narrow

# Suppress warnings from being converted to errors
options(warn = 1) # Set warn to 1 to make warnings not halt execution

# Plotting function call
bwu::dotplot(
  data = data_motor,
  x = x,
  y = y,
  colors = colors,
  return_plot = return_plot,
  filename = filename,
  na.rm = TRUE
)

# Reset warning options to default if needed
options(warn = 0) # Reset to default behavior
```

```{=typst}
#let domain(title: none, file_qtbl, file_fig) = {
  let font = (font: "Roboto Slab", size: 0.5em)
  set text(..font)
  pad(top: 0.5em)[]  
    grid(
      columns: (50%, 50%),
      gutter: 8pt,
        figure([#image(file_qtbl)],
          caption: figure.caption(position: top, [#title]),
          kind: "qtbl",
          supplement: [*Table*],
          ),
        figure([#image(file_fig, width: auto)],
          caption: figure.caption(position: bottom, [
            Sensorimotor tasks refer to the capacity to control hand movements
            quickly, smoothly, and with adequate precision, which are required
            to engage in activities such as writing and drawing.
            ]),
          placement: none,
          kind: "image",
          supplement: [*Figure*],
          gap: 0.5em,
        ),
      )
  }
```
```{=typst}
#let title = "Motor"
#let file_qtbl = "table_motor.png"
#let file_fig = "fig_motor.svg"
#domain(
  title: [#title Scores],
  file_qtbl,
  file_fig
)
```
